CREATE TABLE profiles (id INTEGER PRIMARY KEY AUTOINCREMENT, first_name TEXT NOT NULL, last_name TEXT NOT NULL, age INTEGER NOT NULL CHECK(age > 17), email TEXT NOT NULL UNIQUE, phone TEXT NOT NULL UNIQUE);
CREATE TABLE users (id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT NOT NULL UNIQUE, password TEXT NOT NULL, registered_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, update_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, profile_id INTEGER NOT NULL UNIQUE, FOREIGN KEY (profile_id) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE authors (id INTEGER PRIMARY KEY AUTOINCREMENT, first_name TEXT NOT NULL, last_name TEXT NOT NULL, birth_date NUMERIC NOT NULL, death_date NUMERIC, information TEXT NOT NULL, created_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE genres(id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL UNIQUE, description TEXT NOT NULL, created_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE roles(id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL UNIQUE, created_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE users_roles (user_id INT, role_id INT, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE permissions(id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL UNIQUE, created_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE roles_permissions (role_id INT, permission_id INT, FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (permission_id) REFERENCES permissions(id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE baskets(id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL UNIQUE, created_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, status TEXT NOT NULL DEFAULT active, FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE bankcards(id INTEGER PRIMARY KEY AUTOINCREMENT, number INTEGER NOT NULL UNIQUE, first_name TEXT NOT NULL, last_name TEXT NOT NULL, cvc INTEGER NOT NULL, period NUMERIC NOT NULL, user_id INTEGER NOT NULL UNIQUE, created_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE adresses(id INTEGER PRIMARY KEY AUTOINCREMENT, country TEXT NOT NULL, city TEXT NOT NULL, street TEXT NOT NULL, house_number INTEGER NOT NULL, postcode INTEGER NOT NULL, user_id INTEGER NOT NULL, created_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE books (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, price REAL NOT NULL CHECK (price > 0), description TEXT NOT NULL, pages INTEGER NOT NULL CHECK (pages > 0));
CREATE TABLE books_authors (book_id INT, author_id INT, FOREIGN KEY (book_id) REFERENCES books(id) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (author_id) REFERENCES authors(id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE books_genres (book_id INT, genre_id INT, FOREIGN KEY (book_id) REFERENCES books(id) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (genre_id) REFERENCES genres(id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE books_baskets (book_id INT, basket_id INT, FOREIGN KEY (book_id) REFERENCES books(id) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (basket_id) REFERENCES baskets(id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE transactions(id INTEGER PRIMARY KEY AUTOINCREMENT, basket_id INTEGER NOT NULL, card_id INTEGER NOT NULL, price REAL NOT NULL CHECK (price > 0), adress_id INTEGER NOT NULL, created_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY(basket_id) REFERENCES baskets(id) ON UPDATE CASCADE ON DELETE CASCADE, FOREIGN KEY(card_id) REFERENCES bankcards(id) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY(adress_id) REFERENCES adresses(id) ON DELETE CASCADE ON UPDATE CASCADE);
