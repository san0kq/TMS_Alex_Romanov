import sys
from random import randint
from math import log2, ceil

welcome = '''
Эта программа создана для введение в такой алгоритм как бинарный поиск.
Этот алгоритм используется для быстрого поиска элемента в массиве. Но главное
условие для его работы - отсортированный массив. ОН может состоять из цифр,
слов, либо любых других элементов, главное, чтобы их можно было отсортировать.
Без этого бинарный поиск работать не будет. Сложность данного алгоритма -
O(log n). Имеется ввиду логорифм с основанием 2. Это значит, что для нахождения
нужного элемента в массиве нам понадобится максимум log2(n) попыток,
где n - это количество элементов в массиве. Например, если представить, что у
вас 10 элементов, то нужный элемент мы найдём не более чем за log2(10) попыток,
то есть 3.3 - в худшем случае 4. Вначале программа предложит вам ввести
диапазон чисел, в котором вы будете искать случайное число, установленное
программой. Первое число, что вы введёте, должно быть меньше второго. Иначе
диапазон чисел будет пустой. Вводить только целые числа. Вам будет предложено
угадать число в этом диапазоне, и если вы не угадайте, программа скажет вам
в какую сторону вы ошиблись - в большую или меньшую. И так пока вы его не
угадаете. Каждый раз выбирайте средний элемент в оставшемся массиве - в этом
суть бинарного поиска, делить массив на 2 части, отсеивая сразу ненужную, тем
самым сокращася поиск на каждом шаге в 2 раза. Программа будет помогать вам,
считать количество ваших попыток и показывать сколько максимум попыток должно
быть в вашем случае при правильном бинарном поиске. Если у вас попыток вышло
больше, значит вы что-то сделали не так. Когда вы будете угадывать число, вы
сможете ввести фразу 'стоп' для завершения её выполнения. Если вы затрудняетесь
назвать среднее число или забыли как остановить программу, введите 'помощь'.
'''
helpme = "Для заверешения программы введите 'стоп'."


print(welcome)

number_1 = int(input('Введите первое целое число диапазона: '))
number_2 = int(input('Введите второе целое число диапазона: '))

search_number = randint(number_1, number_2)
# Эти две переменные нужны для правильного деления массива
# на две части в зависимости от выбора
right_number = number_2
left_number = number_1

# passes - макс. кол-во попыток в зависимости от длинны массива.
# Если длинна массива 2, то количество попыток равно двум
passes = log2(len(range(number_1, number_2 + 1))) \
    if len(range(number_1, number_2 + 1)) != 2 else 2
counter = 0  # Счётчик попыток

print(f'Угадайте случайное число от {number_1} до {number_2}')

while True:
    if number_1 == number_2:
        print('У вас только одно число в массиве. Тут ничего угадывать!',
              file=sys.stderr)
        break
    command = input('Введите число: ')
    try:
        if int(command) < search_number:
            print('Не угадали. Ваше число меньше искомого.')
            counter += 1
            left_number = int(command) + 1
        elif int(command) > search_number:
            print('Не угадали. Ваше число больше искомого.')
            counter += 1
            right_number = int(command) - 1
        elif int(command) == search_number:
            counter += 1
            print(f'Верно! Искомое число - {search_number}. '
                  f'Вы потратили {counter} попыток из {ceil(passes)}.')
            if counter <= ceil(passes):
                print("Молодец! Вы всё сделали правильно!")
            else:
                print("Вы угадали, однако потратили больше попыток, "
                      "чем ожидалось. Вы что-то сделали не так.",
                      file=sys.stderr)
            break
    except ValueError:
        if command.lower() == 'стоп':
            print(f'Вы остановили программу. '
                  f'Искомое число было: {search_number}')
            counter = 0
            break
        elif command.lower() == 'помощь':
            print(helpme, f'Среднее число, которое необходимо выбрать - '
                          f'{(left_number + right_number)//2}')
        else:
            print('Вы ввели не число или не команду. Повторите ввод.',
                  file=sys.stderr)
